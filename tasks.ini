# vim: set fenc=utf-8 ft=dosini:

# define a new task named "file-build"
[file-build]
command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILEPATH)"
command:javascript=node "$(VIM_FILEPATH)"
command:typescript,ts=tsc $(VIM_FILEPATH) && node "$(VIM_FILEPATH)"
command:sh=sh "$(VIM_FILEPATH)"
command:lua=lua "$(VIM_FILEPATH)"
command:perl=perl "$(VIM_FILEPATH)"
command:ruby=ruby "$(VIM_FILENAME)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[project-build]
command:c,cpp, objc=make install
command:markdown=pandoc "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)".pdf --from markdown --template eisvogel --listings --toc -F mermaid-filter --resource-path "$(VIM_FILEDIR)" && zathura "$(VIM_PATHNOEXT)".pdf --fork
# set the working directory to the project root.
cwd=$(VIM_ROOT)

[project-run]
command:c,cpp,objc=make run
# <root> is an alias to `$(VIM_ROOT)`, a little easier to type.
cwd=<root>
output=terminal

[make-clean]
cwd=$(VIM_FILEDIR)
command:c,cpp,objc=make clean
